import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as k,c as v,d as a,w as t,b as n,e as s,a as e,r as i}from"./app.9dde53cf.js";const m={},b=e('<p>CLI：Command-Line Interface，命令行界面，俗称脚手架</p><p>VueCli 是一个官方发布的 Vue 项目脚手架</p><p>使用 VueCli 可以快速搭建 Vue 开发环境以及对应的 webpack 配置</p><h2 id="安装与创建" tabindex="-1"><a class="header-anchor" href="#安装与创建" aria-hidden="true">#</a> 安装与创建</h2><h3 id="安装包" tabindex="-1"><a class="header-anchor" href="#安装包" aria-hidden="true">#</a> 安装包</h3><p>默认情况下自动安装 Node 和 NPM Node 环境要求 8.9 以上或者更高版本</p><p>最新的 VueCli5 已经将底层 webpack 版本升到了 v5，现在市场上主流的版本 v4 和 v5 都有</p><p>最重要的一点：弃用了非常坑爹的 node-sass</p>',8),g=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(" i "),n("span",{class:"token parameter variable"},"-g"),s(` @vue-cli
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(" i "),n("span",{class:"token parameter variable"},"-g"),s(` @vue-cli
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(" i "),n("span",{class:"token parameter variable"},"-g"),s(` @vue-cli
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),y=e(`<h3 id="创建新项目" tabindex="-1"><a class="header-anchor" href="#创建新项目" aria-hidden="true">#</a> 创建新项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue create <span class="token operator">&lt;</span>app-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Enter 后，根据自己的实际情况动态选择所需的技术栈</p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/Webpack/vue-cli.png" alt="VueCliOption" loading="lazy"></p><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/Webpack/vue-cli-structure.png" alt="VueCliStructure" loading="lazy"></p><p>注意区分 public 文件夹和 src 文件夹：</p><p>src 文件夹：代码编译时的根目录，编写业务代码的根路径，在其他地方禁止编写业务代码</p><p>public 文件夹：可以理解为代码运行时的根目录（只是理解，真正打包后会新增打包内容），一般只有一些需要<strong>页面加载完成</strong>后才能继续加载的内容如图片、css 文件、js 文件才会放到这里，否则禁止在这里存放文件，静态文件大多数情况会存放在 src 文件夹下的 assets 目录下，VueCli 打包时会帮我们自动打包并压缩静态文件</p><p>src 存放的是项目业务代码的目录</p><p>main.js：项目的入口文件，需要页面加载前执行的功能文件都需要引入在这</p><p>App.vue：项目的入口组件，也称为根组件，是组件树的最顶层组件</p><p>components：存放公共组件</p><p>assets：存放静态资源，如图片、css、公共 js、json 等</p><p>view：页面组件目录，项目需求拆分页面后在这里编写页面代码</p><p>vue.config.js：VueCli 的打包配置文件，很重要，涉及开发优化和打包优化</p><p>其他在项目根目录下的基本都是不同依赖的配置文件（ESLint、jest、babel、postCSS 等）</p><h2 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源" aria-hidden="true">#</a> 静态资源</h2><h3 id="public-index-html" tabindex="-1"><a class="header-anchor" href="#public-index-html" aria-hidden="true">#</a> public/index.html</h3><p><code>public/index.html</code>：这个目录下的文件是会被<code>html-webpack-plugin</code>处理的模板，在开发或生产构建中，所有相关的 css、js、其他图片等资源都会自动注入到这里，展示出页面</p><h4 id="插值" tabindex="-1"><a class="header-anchor" href="#插值" aria-hidden="true">#</a> 插值</h4>`,21),_={href:"https://ejs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"},x=e(`<ul><li><code>&lt;%= VALUE %&gt;</code>：做不转义插值，VALUE 是多少这里就插多少</li><li><code>&lt;%- VALUE %&gt;</code>：做 HTML 转义插值，最终是 html 元素</li><li><code>&lt;%= expression %&gt;</code>：描述 JS 流程控制，expression 里面可以是代码块或表达式</li></ul><p>下面是使用了<a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a>的插值语句判断表达式</p><div class="language-env line-numbers-mode" data-ext="env"><pre class="language-env"><code>NODE_ENV=&#39;development&#39;

VUE_APP_MAIN_PAGE=&#39;http://dev.xxx.com&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-env line-numbers-mode" data-ext="env"><pre class="language-env"><code>NODE_ENV=&#39;production&#39;

VUE_APP_MAIN_PAGE=&#39;https://www.xxx.com&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  &lt;% if(NODE_ENV === &quot;production&quot;) {%&gt;
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  &lt;% } else if(NODE_ENV === &#39;development&#39;) { %&gt;
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  &lt;% } %&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里表示，当前环境处于生产环境时，引入<code>xxx.min.js</code>文件，而处于开发环境时，引入<code>xxx.js</code>文件，不同环境不同的 cdn 文件引入</p><h4 id="preload" tabindex="-1"><a class="header-anchor" href="#preload" aria-hidden="true">#</a> preload</h4><p><code>&lt;link rel=&quot;preload&quot;&gt;</code> 是一种 resource hint，用来指定页面加载后很快会被用到的资源，所以在页面加载的过程中，我们希望在浏览器开始主体渲染之前尽早 preload。</p><p>默认情况下，一个 VueCli 应用会为所有初始化渲染需要的文件自动生成 preload 提示。</p><h4 id="prefetch" tabindex="-1"><a class="header-anchor" href="#prefetch" aria-hidden="true">#</a> prefetch</h4><link rel="prefetch">`,11),E=e(`<p>默认情况下，一个 VueCli 应用会为所有作为 async chunk 生成的 JavaScript 文件 (通过动态 import) 自动生成 prefetch 提示。</p><h3 id="静态资源路径" tabindex="-1"><a class="header-anchor" href="#静态资源路径" aria-hidden="true">#</a> 静态资源路径</h3><ul><li>如果 URL 是一个绝对路径 (例如 /images/foo.png)，它将会被保留不变。</li><li>如果 URL 以 <code>.</code> 开头，它会作为一个相对模块请求被解释且基于你的文件系统中的目录结构进行解析。</li><li>如果 URL 以 <code>~</code> 开头，其后的任何内容都会作为一个模块请求被解析。这意味着你甚至可以引用 Node 模块中的资源：</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~some-npm-package/foo.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果 URL 以 <code>@</code> 开头，它也会作为一个模块请求被解析。它的用处在于 Vue CLI 默认会设置一个指向 <code>项目根目录/src</code> 的别名 @。(仅作用于模版中)</li></ul><h3 id="还是那个-public" tabindex="-1"><a class="header-anchor" href="#还是那个-public" aria-hidden="true">#</a> 还是那个 public</h3><p>现在继续来谈 public 文件夹</p><p>上面已经提到了，可以将 public 文件夹理解成运行时环境。其实是因为 public 文件夹中的全部资源都会直接复制到最终打包产物中，不经过 webpack，所以<code>public/index.html</code>的相对位置其实就跟打包后 index.html 的相对位置基本没有区别了</p><p>注意：public 目录提供的是一种应急手段，使用 public 文件夹的场景如下：</p><ul><li>你需要在打包产物中指定一个文件的名字时</li><li>你又上千张图片、需要动态引用它们的路径</li><li>部分需要在页面运行时加载的库，如一些 UI 库的国际化、CSS 文件，需要放在 public 中等待运行后读取</li></ul><h2 id="css-相关" tabindex="-1"><a class="header-anchor" href="#css-相关" aria-hidden="true">#</a> css 相关</h2><h3 id="自动导入" tabindex="-1"><a class="header-anchor" href="#自动导入" aria-hidden="true">#</a> 自动导入</h3><p>VueCli 自动支持各种预编译 CSS 语言，安装即用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Sass</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> sass-loader sass

<span class="token comment"># Less</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> less-loader <span class="token function">less</span>

<span class="token comment"># Stylus</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> stylus-loader stylus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如安装好 sass-loader 后，就可以在 vue 文件中这样写：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
$<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="postcss" tabindex="-1"><a class="header-anchor" href="#postcss" aria-hidden="true">#</a> PostCSS</h3>`,17),q={href:"https://github.com/postcss/postcss-load-config",target:"_blank",rel:"noopener noreferrer"},j=e(`<p>PostCSS 主要作用是：在项目编译时提前对 CSS 做预处理，最常见的是将全部的固定 px 转化为动态的 rem，实现响应式布局</p><h3 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h3><p>VueCli 支持在 vue 或 js 文件中以变量形式引入<code>xxx.module.css</code>文件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>import styles from &quot;./foo.module.css&quot;; // 所有支持的预处理器都一样工作 import
sassStyles from &quot;./foo.module.scss&quot;;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">localClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">className</span><span class="token operator">:</span> styles<span class="token punctuation">.</span>foo<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你想去掉文件名中的 .module，可以设置 vue.config.js 中的 css.requireModuleExtension 为 false：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">requireModuleExtension</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量" aria-hidden="true">#</a> 全局变量</h3><p>通过在 vue.config.js 中的 css.loaderOptions 选项中导入 sass 文件的变量，我们能够在所有 sass 样式，包括<code>&lt;style lang=&quot;sass&quot;&gt;</code>的 vue 文件中注入共享的全局变量</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 给 sass-loader 传递选项</span>
      <span class="token literal-property property">sass</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// @/ 是 src/ 的别名</span>
        <span class="token comment">// 所以这里假设你有 \`src/variables.sass\` 这个文件</span>
        <span class="token comment">// 注意：在 sass-loader v8 中，这个选项名是 &quot;prependData&quot;</span>
        <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@import &quot;~@/variables.sass&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 默认情况下 \`sass\` 选项会同时对 \`sass\` 和 \`scss\` 语法同时生效</span>
      <span class="token comment">// 因为 \`scss\` 语法在内部也是由 sass-loader 处理的</span>
      <span class="token comment">// 但是在配置 \`prependData\` 选项的时候</span>
      <span class="token comment">// \`scss\` 语法会要求语句结尾必须有分号，\`sass\` 则要求必须没有分号</span>
      <span class="token comment">// 在这种情况下，我们可以使用 \`scss\` 选项，对 \`scss\` 语法进行单独配置</span>
      <span class="token literal-property property">scss</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@import &quot;~@/variables.scss&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 给 less-loader 传递 Less.js 相关选项</span>
      <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// http://lesscss.org/usage/#less-options-strict-units \`Global Variables\`</span>
        <span class="token comment">// \`primary\` is global variables fields name</span>
        <span class="token literal-property property">globalVars</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;#fff&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模式和环境变量" tabindex="-1"><a class="header-anchor" href="#模式和环境变量" aria-hidden="true">#</a> 模式和环境变量</h2><h3 id="模式" tabindex="-1"><a class="header-anchor" href="#模式" aria-hidden="true">#</a> 模式</h3><p>模式是 VueCli 项目中的重要概念，VueCli 默认有三个模式</p><ul><li>development：开发模式，用于启动服务<code>vue-cli-service serve</code></li><li>test：测试模式，用于单元测试<code>vue-cli-service test:unit</code></li><li>production：生产模式，用于项目打包<code>vue-cli-service build</code></li></ul><p>你可以在 package.json 文件中的 scripts 字段内覆写命令行执行时的模式，比如，在生产打包时使用开发模式（实际开发中我们一般并不这样做）</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --mode development&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行<code>vue-cli-service</code>命令时，所有环境变量都从对应的环境文件中载入，如果文件内部不包含 NODE_ENV 变量，它的值就是模式的值（这里就是 development）</p>`,16),V=n("code",null,"NODE_ENV=development",-1),A=n("code",null,"vendor bundles",-1),C=e(`<p><code>NODE_ENV=production</code>创建的产物，会执行 VueCli 默认的打包优化，对资源进行压缩，同时 Vue 将启用生产环境文件，控制台将不会出现 Vue 的警告和提示</p><p>当然，为了配合实际项目的具体情况，你也可以命名其他的模式，比如这里会针对开发、测试、生产三台服务器执行三种不同模式的打包</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --mode development&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:release&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --mode release&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:prod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --mode production&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><p>你可以在你的项目根目录中放置下列文件来指定环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>.env                <span class="token comment"># 在所有的环境中被载入</span>
.env.local          <span class="token comment"># 在所有的环境中被载入，但会被 git 忽略</span>
.env.<span class="token punctuation">[</span>mode<span class="token punctuation">]</span>         <span class="token comment"># 只在指定的模式中被载入</span>
.env.<span class="token punctuation">[</span>mode<span class="token punctuation">]</span>.local   <span class="token comment"># 只在指定的模式中被载入，但会被 git 忽略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个环境文件只包含环境变量的“键=值”对</p><div class="language-env line-numbers-mode" data-ext="env"><pre class="language-env"><code>FOO=bar
VUE_APP_NOT_SECRET_CODE=some_value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：不要在你的应用程序中存储任何机密信息（例如私有 API 密钥）！</strong></p><p>请注意，只有 <code>NODE_ENV</code>，<code>BASE_URL</code> 和以 <code>VUE_APP_</code> 开头的变量将通过 webpack.DefinePlugin 静态地嵌入到客户端侧的代码中。这是为了避免意外公开机器上可能具有相同名称的私钥</p>`,10),N={href:"https://github.com/motdotla/dotenv-expand",target:"_blank",rel:"noopener noreferrer"},P=n("p",null,[s("在客户端使用环境变量时，需要以"),n("code",null,[s("p"),n("wbr"),s("rocess.env.XXX")]),s("来编写")],-1),w=n("p",null,"下面是一个环境变量在代码中的使用案例",-1),D=n("div",{class:"language-env line-numbers-mode","data-ext":"env"},[n("pre",{class:"language-env"},[n("code",null,`VUE_APP_BASE_API='/dev-api'
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),S=n("div",{class:"language-env line-numbers-mode","data-ext":"env"},[n("pre",{class:"language-env"},[n("code",null,`VUE_APP_BASE_API='/test-api'
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-env line-numbers-mode","data-ext":"env"},[n("pre",{class:"language-env"},[n("code",null,`VUE_APP_BASE_API='/api'
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),U=e(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 返回一个可预览图片的url路径</span>
    <span class="token function">previewImage</span><span class="token punctuation">(</span><span class="token parameter">suffix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 不同的环境下会以不同的api前缀返回路径，以确保不同环境的路径正确性</span>
      <span class="token keyword">return</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_API</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建优化" tabindex="-1"><a class="header-anchor" href="#构建优化" aria-hidden="true">#</a> 构建优化</h2>`,2),L={href:"https://cli.vuejs.org/zh/guide/webpack.html#%E9%93%BE%E5%BC%8F%E6%93%8D%E4%BD%9C-%E9%AB%98%E7%BA%A7",target:"_blank",rel:"noopener noreferrer"},B={href:"https://cli.vuejs.org/zh/guide/webpack.html",target:"_blank",rel:"noopener noreferrer"},I=e(`<h3 id="本地开发取消按需加载" tabindex="-1"><a class="header-anchor" href="#本地开发取消按需加载" aria-hidden="true">#</a> 本地开发取消按需加载</h3><p>本地开发并不需要按需加载，可以加入<code>dynamic-import-node</code>将全部文件合并为一个大的 bundle 文件，加快本地开发速度</p><h3 id="删除调试代码" tabindex="-1"><a class="header-anchor" href="#删除调试代码" aria-hidden="true">#</a> 删除调试代码</h3><p>一般我们在生产环境中需要删除<code>console.log</code>和<code>debugger</code>的代码，通过下面的配置来执行</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// drop console &amp; debugger</span>
      config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span><span class="token function">minimizer</span><span class="token punctuation">(</span><span class="token string">&quot;terser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>parallel <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>terserOptions<span class="token punctuation">.</span>compress<span class="token punctuation">.</span>warnings <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>terserOptions<span class="token punctuation">.</span>compress<span class="token punctuation">.</span>drop_debugger <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>terserOptions<span class="token punctuation">.</span>compress<span class="token punctuation">.</span>drop_console <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> args<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启用-gzip-压缩" tabindex="-1"><a class="header-anchor" href="#启用-gzip-压缩" aria-hidden="true">#</a> 启用 gzip 压缩</h3><p>使用 gzip 的压缩效果非常显著，能大幅提升客户端浏览器与服务器之间的传输效率。如果我们前端已经使用了 gzip 压缩，服务端就能直接使用压缩好的代码传输给客户端，使得网络压力更小</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
<span class="token keyword">const</span> CompressionWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;compression-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">CompressionWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[path].gz[query]&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&quot;gzip&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> productionGzipExtensions<span class="token punctuation">,</span>
        <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
        <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
        <span class="token literal-property property">deleteOriginalAssets</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否删除原始文件</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码分割" tabindex="-1"><a class="header-anchor" href="#代码分割" aria-hidden="true">#</a> 代码分割</h3><p>UI 库、大型库、引入次数很多的库，按需打包（Tree-shaking）非常困难，并且这些第三方库往往都是不变的代码，单独分割出来让浏览器并行加载，能提升加载速度</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置生产环境生效</span>
      <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span><span class="token function">splitChunks</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 将对什么类型的代码进行分割，三种值：all: 全部 ｜ async: 异步，按需加载的代码 ｜ initial: 入口代码块</span>
          <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// 缓存组</span>
            <span class="token comment">// 项目使用 element-ui 组件开发的，定义 element-ui 缓存组，用于分割 element-ui 代码</span>
            <span class="token literal-property property">elementUI</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chunk-elementUI&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token comment">// 优先级 20，命中 element-ui 代码时，优先分割到此组里</span>
              <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]_?element-ui(.*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 匹配 element-ui 代码</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// 定义 libs 缓存组，分割从 node_modules 中引入的代码</span>
            <span class="token literal-property property">libs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chunk-libs&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 分割成的文件名</span>
              <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 匹配 node_modules 中模块</span>
              <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// 优先级，当模块同时命中多个缓存组的规则时，分配到优先级高的缓存组</span>
              <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;initial&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 这里覆盖上面的 chunks: &#39;all&#39;，仅打包最初依赖的第三方库</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-cdn" tabindex="-1"><a class="header-anchor" href="#配置-cdn" aria-hidden="true">#</a> 配置 CDN</h3><p>一般这个功能，仅适用于公司有自己的 cdn 库，否则使用第三方的 cdn 稳定性很难保证</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
<span class="token keyword">const</span> buildEnv <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BUILD_ENV</span>
<span class="token keyword">const</span> cdn <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildEnv<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/publicPath/vue.min.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildEnv<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/publicPath/element-ui.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildEnv<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/publicPath/tinymce.min.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildEnv<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/publicPath/echarts.min.js</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;externals&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token comment">// 将Vue、ElementUI、tinyMce、Echarts全部从本地打包产物中移除</span>
          <span class="token string-property property">&#39;vue&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Vue&#39;</span><span class="token punctuation">,</span>
          <span class="token string-property property">&#39;element-ui&#39;</span><span class="token operator">:</span> <span class="token string">&#39;ELEMENT&#39;</span><span class="token punctuation">,</span>
          <span class="token string-property property">&#39;tinymce/tinymce&#39;</span><span class="token operator">:</span> <span class="token string">&#39;tinymce&#39;</span>
          <span class="token string-property property">&#39;echarts&#39;</span><span class="token operator">:</span> <span class="token string">&#39;echarts&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        config<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cdn <span class="token operator">=</span> cdn
          <span class="token keyword">return</span> args
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function z(W,M){const u=i("CodeTabs"),p=i("ExternalLinkIcon"),r=i("RouterLink");return k(),v("div",null,[b,a(u,{id:"24",data:[{title:"npm"},{title:"yarn"},{title:"pnpm"}],"tab-id":"shell"},{tab0:t(({title:o,value:c,isActive:l})=>[g]),tab1:t(({title:o,value:c,isActive:l})=>[h]),tab2:t(({title:o,value:c,isActive:l})=>[f]),_:1}),y,n("p",null,[s("这里的插值语法可以参考"),n("a",_,[s("EJS"),a(p)])]),x,s(" 是一种 resource hint，用来告诉浏览器在页面加载完成后，利用空闲时间提前获取用户未来可能会访问的内容。 "),E,n("p",null,[s("你可以通过 .postcssrc 或任何"),n("a",q,[s("postcss-load-config"),a(p)]),s("支持的配置源来配置 PostCSS。也可以通过 vue.config.js 中的 css.loaderOptions.postcss 配置 postcss-loader。")]),j,n("p",null,[V,s("创建的产物，会默认自用"),a(r,{to:"/webpack/senior.html#%E6%A8%A1%E5%9D%97%E7%83%AD%E6%9B%BF%E6%8D%A2%E4%B8%8E%E7%83%AD%E5%8A%A0%E8%BD%BD"},{default:t(()=>[s("热更新 HMR")]),_:1}),s("，并且不会对资源进行 hash 也不会打出"),A,s("，目的是为了加快开发的构建速度")]),C,n("p",null,[s("VueCli 底层参考"),n("a",N,[s("dotenv"),a(p)]),s("实现的变量扩展")]),P,w,a(u,{id:"308",data:[{title:"development"},{title:"staging"},{title:"production"}],"tab-id":"shell"},{tab0:t(({title:o,value:c,isActive:l})=>[D]),tab1:t(({title:o,value:c,isActive:l})=>[S]),tab2:t(({title:o,value:c,isActive:l})=>[O]),_:1}),U,n("p",null,[s("VueCli 提供了"),n("a",L,[s("chainWebpack"),a(p)]),s("来增强甚至覆盖底层 Webpack 的功能")]),n("p",null,[s("当然一些常规配置能直接在"),n("a",B,[s("configureWebpack"),a(p)]),s("上进行操作")]),I])}const F=d(m,[["render",z],["__file","5-vuecli.html.vue"]]);export{F as default};
