import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,d as a}from"./app.9676ab1b.js";const t={},n=a('<h2 id="模块与组件" tabindex="-1"><a class="header-anchor" href="#模块与组件" aria-hidden="true">#</a> 模块与组件</h2><h3 id="模块" tabindex="-1"><a class="header-anchor" href="#模块" aria-hidden="true">#</a> 模块</h3><p>1.理解: 向外提供特定功能的 js 程序, 一般就是一个 js 文件</p><p>2.作用: 复用 js, 简化 js 的编写, 提高 js 运行效率</p><h3 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h3><p>1.理解: 用来实现局部(特定)功能效果的代码集合(html/css/js/image…..)</p><p>2.作用: 复用编码, 简化项目编码, 提高运行效率</p><br><p>模块化：当应用中的 js 都以模块来编写的, 那这个应用就是一个模块化的应用。</p><p>组件化：当应用中的功能都是多组件的方式来编写的, 那这个应用就是一个组件化的应用。</p><h3 id="非单文件组件" tabindex="-1"><a class="header-anchor" href="#非单文件组件" aria-hidden="true">#</a> 非单文件组件</h3><p>问题：</p><ol><li>模板编写没有提示</li><li>没有构建过程, 无法将 ES6 转换成 ES5</li><li>不支持组件的 CSS</li><li>真正开发中几乎不用</li></ol><p>创建步骤：</p><p>1.创建组件，const app = Vue.extend( data({ return xxx; }) )</p><p>注意区别：1.el 不要写，因为 el 由最终的 vm 来管理。2.data 必须写成函数，避免组件复用数据存在引用。</p><p>备注：使用 template 可以配置组件结构。</p><p>2.注册组件</p><p>1）局部注册：new Vue({ components: { app } })</p><p>2）全局注册：Vue.component(&#39;组件名&#39;，组件)</p><p>3.编写组件标签</p><p><code>&lt;hello&gt;&lt;/hello&gt;</code></p><h2 id="组件名" tabindex="-1"><a class="header-anchor" href="#组件名" aria-hidden="true">#</a> 组件名</h2><p>1.单词拼写</p><p>一个单词组成：school School均可</p><p>多个单词组成：my-school √ MySchool ×（需要脚手架支持）</p><p>尽可能回避HTML已有元素名称，可以使用name配置项指定组件在开发者工具中呈现的名字。</p><p>2.组件标签</p><p><code>&lt;school&gt;&lt;/school&gt;</code> √</p><p><code>&lt;school/&gt;</code> 不使用脚手架时，会导致后续组件不能渲染。</p><h2 id="vuecomponent构造函数" tabindex="-1"><a class="header-anchor" href="#vuecomponent构造函数" aria-hidden="true">#</a> VueComponent构造函数</h2><p>1.school组件本质是一个名为VueComponent的构造函数，且不是程序员定义的，是Vue.extend生成的。</p><p>2.我们只需要写<code>&lt;school&gt;&lt;/school&gt;</code>，Vue解析时会帮我们创建school组件的实例对象，Vue会执行new VueComponent(options)。</p><p>3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent。</p><p>4.关于this指向：</p><p>​ （1）组件配置中：data函数、methods函数、watch函数、computed函数，它们的this均是VueComponent实例对象。</p><p>​ （2）new Vue()配置中：data函数、methods函数、watch函数、computed函数，它们的this均是Vue实例对象。</p><p>5.VueComponent的实例对象，以后简称vc（也可称之为：组件实例对象）。Vue的实例对象简称vm。</p><p>以下是VueComponent关系图谱：</p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/Vue/image-20211020160043625.png" alt="非常重要的VueComponent关系图谱" loading="lazy"></p><h2 id="单文件组件" tabindex="-1"><a class="header-anchor" href="#单文件组件" aria-hidden="true">#</a> 单文件组件</h2><p>单文件组件的使用简单，耦合度低，是开发中最常用的写法。</p><p>创建步骤：</p><ol><li>引入组件</li><li>映射成标签</li><li>使用组件标签</li></ol><p>单文件组件的书写格式详见脚手架章节</p>',45),h=[n];function c(d,l){return p(),o("div",null,h)}const r=e(t,[["render",c],["__file","6-组件化编程.html.vue"]]);export{r as default};
