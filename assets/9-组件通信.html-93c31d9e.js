const e=JSON.parse('{"key":"v-43028b0f","path":"/vue2/9-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html","title":"组件通信","lang":"zh-CN","frontmatter":{"title":"组件通信","order":9,"tag":["组件通信","单双数据流","事件通信","插槽"],"description":"此处搬运了 12 种基于 vue 框架层面分析通讯方案，以其他方式实现的方案不记录在此 1.单向 props 在父组件子组件添加自定义属性，挂载需要传递的数据，子组件用 props 来接受，接收方式也可以是数组，也可以是对象，子组件接收到数据之后，不能直接修改父组件的数据。会报错，所以当父组件重新渲染时，数据会被覆盖。如果子组件内要修改的话推荐使用 $...","head":[["meta",{"property":"og:url","content":"http://localhost:8080/frontend-service-station/vue2/9-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html"}],["meta",{"property":"og:site_name","content":"前端加油站"}],["meta",{"property":"og:title","content":"组件通信"}],["meta",{"property":"og:description","content":"此处搬运了 12 种基于 vue 框架层面分析通讯方案，以其他方式实现的方案不记录在此 1.单向 props 在父组件子组件添加自定义属性，挂载需要传递的数据，子组件用 props 来接受，接收方式也可以是数组，也可以是对象，子组件接收到数据之后，不能直接修改父组件的数据。会报错，所以当父组件重新渲染时，数据会被覆盖。如果子组件内要修改的话推荐使用 $..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T13:20:52.000Z"}],["meta",{"property":"article:author","content":"Misaka10032"}],["meta",{"property":"article:tag","content":"组件通信"}],["meta",{"property":"article:tag","content":"单双数据流"}],["meta",{"property":"article:tag","content":"事件通信"}],["meta",{"property":"article:tag","content":"插槽"}],["meta",{"property":"article:modified_time","content":"2023-06-30T13:20:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件通信\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-30T13:20:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Misaka10032\\",\\"url\\":\\"https://github.com/mi-saka10032?tab=repositories\\",\\"email\\":\\"misaka10032@aliyun.com\\"}]}"]]},"headers":[{"level":2,"title":"1.单向 props","slug":"_1-单向-props","link":"#_1-单向-props","children":[]},{"level":2,"title":"2.双向 v-model","slug":"_2-双向-v-model","link":"#_2-双向-v-model","children":[]},{"level":2,"title":"3.sync","slug":"_3-sync","link":"#_3-sync","children":[]},{"level":2,"title":"4.ref","slug":"_4-ref","link":"#_4-ref","children":[]},{"level":2,"title":"5.$emit / v-on","slug":"_5-emit-v-on","link":"#_5-emit-v-on","children":[]},{"level":2,"title":"6.$attrs / $listeners","slug":"_6-attrs-listeners","link":"#_6-attrs-listeners","children":[]},{"level":2,"title":"7.$children / $parent","slug":"_7-children-parent","link":"#_7-children-parent","children":[]},{"level":2,"title":"8.provide / inject 祖孙通信","slug":"_8-provide-inject-祖孙通信","link":"#_8-provide-inject-祖孙通信","children":[]},{"level":2,"title":"9.EventBus 全局事件总线","slug":"_9-eventbus-全局事件总线","link":"#_9-eventbus-全局事件总线","children":[]},{"level":2,"title":"10.vuex 通信","slug":"_10-vuex-通信","link":"#_10-vuex-通信","children":[]},{"level":2,"title":"11.具名插槽+作用域插槽","slug":"_11-具名插槽-作用域插槽","link":"#_11-具名插槽-作用域插槽","children":[]},{"level":2,"title":"12.$root","slug":"_12-root","link":"#_12-root","children":[]}],"git":{"createdTime":1675946819000,"updatedTime":1688131252000,"contributors":[{"name":"misakayu","email":"misakayu@tencent.com","commits":1},{"name":"yuzhihang","email":"misaka10032@aliyun.com","commits":1}]},"readingTime":{"minutes":8.42,"words":2527},"filePathRelative":"vue2/9-组件通信.md","localizedDate":"2023年2月9日","autoDesc":true,"excerpt":""}');export{e as data};
