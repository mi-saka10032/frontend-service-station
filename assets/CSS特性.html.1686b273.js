import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as e,f as i}from"./app.d458e3b3.js";const a={},r=i('<h2 id="层叠性" tabindex="-1"><a class="header-anchor" href="#层叠性" aria-hidden="true">#</a> 层叠性</h2><p>相同选择器给设置相同的样式，此时一个样式会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突问题。</p><p>原则：</p><ul><li><p>样式冲突，就近原则。</p></li><li><p>样式不冲突，不会层叠。</p></li></ul><h2 id="继承性" tabindex="-1"><a class="header-anchor" href="#继承性" aria-hidden="true">#</a> 继承性</h2><p>子标签会继承父标签的某些样式，比如文本颜色和字号等。</p><ul><li><p>恰当使用继承可以简化代码，降低样式复杂性。</p></li><li><p>子元素可以继承父元素的样式（text- , font- , line- , color 这些元素开头的可以继承）</p></li></ul><br><p><strong>额外内容 1：行高的继承性</strong></p><ul><li><p>行高可以跟单位也可以不跟单位</p></li><li><p>父元素如果设置行高 1.5，子元素没有设置行高，则子元素继承父元素行高 1.5。写法优势为子元素可根据自己文字大小自动调整行高。</p></li></ul><h2 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h2><p>当同一个元素指定多个选择器，就会有优先级产生。</p><ul><li><p>选择器相同，执行层叠性。</p></li><li><p>选择器不同，根据选择器权重执行。</p></li></ul><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">选择器权重</th></tr></thead><tbody><tr><td style="text-align:left;">继承 或者 *</td><td style="text-align:left;">0,0,0,0</td></tr><tr><td style="text-align:left;">元素选择器</td><td style="text-align:left;">0,0,0,1</td></tr><tr><td style="text-align:left;">类选择器，伪类选择器</td><td style="text-align:left;">0,0,1,0</td></tr><tr><td style="text-align:left;">ID 选择器</td><td style="text-align:left;">0,1,0,0</td></tr><tr><td style="text-align:left;">行内样式 style &quot;&quot;</td><td style="text-align:left;">1,0,0,0</td></tr><tr><td style="text-align:left;">!important 重要的</td><td style="text-align:left;">∞ 无穷大</td></tr></tbody></table><br><p><strong>注意</strong></p><ol><li><p>权重由 4 组数字组成，但是不会有进位。</p></li><li><p>可以理解为类选择永远大于元素选择器，id 选择器永远大于类选择器，以此类推。</p></li><li><p>等级判断从左向右，如果某一位数值相同，则判断下一位数值。</p></li><li><p>继承的权重是 0，如果该元素没有直接选中，不管父元素权重多高，子元素继承后权重仍为 0。</p></li></ol><br><p><strong>额外内容 2：权重叠加</strong></p><ol><li><p>复合选择器权重叠加</p></li><li><p>权重虽然会叠加，但是永远不会有进位。</p></li></ol>',20),d=[r];function p(n,s){return l(),e("div",null,d)}const f=t(a,[["render",p],["__file","CSS特性.html.vue"]]);export{f as default};
