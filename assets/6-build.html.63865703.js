import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as l,a,b as s,e as i,d as r,r as o}from"./app.72a63fa9.js";const c={},d=a("p",null,"注意：主应用和微应用都是独立开发和部署，即它们都属于不同的仓库和服务",-1),p={href:"https://qiankun.umijs.org/zh/cookbook",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="主微应用同一服务器部署" tabindex="-1"><a class="header-anchor" href="#主微应用同一服务器部署" aria-hidden="true">#</a> 主微应用同一服务器部署</h2><p>如果服务器数量有限，或不能跨域等原因需要把主应用和微应用部署到一起</p><h3 id="通常做法" tabindex="-1"><a class="header-anchor" href="#通常做法" aria-hidden="true">#</a> 通常做法</h3><p>主应用部署一级目录，微应用部署二/三极目录</p><p>微应用想部署在非根目录，打包前需要执行：</p><ol><li>history 路由的微应用需要设置 base ，值为目录名称，用于独立访问时使用</li><li>必须配置 webpack 构建时的 publicPath 为目录名称</li></ol><h3 id="部署后" tabindex="-1"><a class="header-anchor" href="#部署后" aria-hidden="true">#</a> 部署后</h3><ol><li>微应用的真实访问路径就是微应用的 entry，entry 可以为相对路径</li><li>微应用的 entry 路径最后面的 / 不可省略，否则 publicPath 会设置错误，例如子项的访问路径是 <code>http://localhost:8080/app1</code>,那么 entry 就是 <code>http://localhost:8080/app1/</code></li></ol><h3 id="建议方案一" tabindex="-1"><a class="header-anchor" href="#建议方案一" aria-hidden="true">#</a> 建议方案一</h3><p>微应用都放在在一个特殊名称（不会和微应用重名）的文件夹下（建议使用）</p><p>假设我们有一个主应用和 6 个微应用（分别为 vue-hash、vue-history、react-hash、react-history、angular-hash、angular-history ），打包后如下放置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>└── html/                     <span class="token comment"># 根文件夹</span>
    <span class="token operator">|</span>
    ├── child/                <span class="token comment"># 存放所有微应用的文件夹</span>
    <span class="token operator">|</span>   ├── vue-hash/         <span class="token comment"># 存放微应用 vue-hash 的文件夹</span>
    <span class="token operator">|</span>   ├── vue-history/      <span class="token comment"># 存放微应用 vue-history 的文件夹</span>
    <span class="token operator">|</span>   ├── react-hash/       <span class="token comment"># 存放微应用 react-hash 的文件夹</span>
    <span class="token operator">|</span>   ├── react-history/    <span class="token comment"># 存放微应用 react-history 的文件夹</span>
    <span class="token operator">|</span>   ├── angular-hash/     <span class="token comment"># 存放微应用 angular-hash 的文件夹</span>
    <span class="token operator">|</span>   ├── angular-history/  <span class="token comment"># 存放微应用 angular-history 的文件夹</span>
    ├── index.html            <span class="token comment"># 主应用的index.html</span>
    ├── css/                  <span class="token comment"># 主应用的css文件夹</span>
    ├── js/                   <span class="token comment"># 主应用的js文件夹</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时需要设置微应用构建时的 publicPath 和 history 模式的路由 base，然后才能打包放到对应的目录里。</p><table><thead><tr><th style="text-align:left;">项目</th><th style="text-align:left;">路由 base</th><th style="text-align:left;">publicPath</th><th style="text-align:left;">真实访问路径</th></tr></thead><tbody><tr><td style="text-align:left;">vue-hash</td><td style="text-align:left;">无</td><td style="text-align:left;">/child/vue-hash/</td><td style="text-align:left;"><code>http://localhost:8080/child/vue-hash/</code></td></tr><tr><td style="text-align:left;">vue-history</td><td style="text-align:left;">/child/vue-history/</td><td style="text-align:left;">/child/vue-history/</td><td style="text-align:left;"><code>http://localhost:8080/child/vue-history/</code></td></tr><tr><td style="text-align:left;">react-hash</td><td style="text-align:left;">无</td><td style="text-align:left;">/child/react-hash/</td><td style="text-align:left;"><code>http://localhost:8080/child/react-hash/</code></td></tr><tr><td style="text-align:left;">react-history</td><td style="text-align:left;">/child/react-history/</td><td style="text-align:left;">/child/react-history/</td><td style="text-align:left;"><code>http://localhost:8080/child/react-history/</code></td></tr><tr><td style="text-align:left;">angular-hash</td><td style="text-align:left;">无</td><td style="text-align:left;">/child/angular-hash/</td><td style="text-align:left;"><code>http://localhost:8080/child/vue-hash/</code></td></tr><tr><td style="text-align:left;">angular-history</td><td style="text-align:left;">无/child/angular-history/</td><td style="text-align:left;">/child/angular-history/</td><td style="text-align:left;"><code>http://localhost:8080/child/vue-history/</code></td></tr></tbody></table><p>注意给应用启用 history 模式的配置 nginx：<code>try_files $uri $uri/ /child/vue-history/index.html;</code>用以回退页面</p><h3 id="建议方案二" tabindex="-1"><a class="header-anchor" href="#建议方案二" aria-hidden="true">#</a> 建议方案二</h3><p>微应用直接放在二级目录，但是设置特殊的路径匹配规则</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>└── html/                     <span class="token comment"># 根文件夹</span>
    <span class="token operator">|</span>
    ├── vue-hash/             <span class="token comment"># 存放微应用 vue-hash 的文件夹</span>
    ├── vue-history/          <span class="token comment"># 存放微应用 vue-history 的文件夹</span>
    ├── react-hash/           <span class="token comment"># 存放微应用 react-hash 的文件夹</span>
    ├── react-history/        <span class="token comment"># 存放微应用 react-history 的文件夹</span>
    ├── angular-hash/         <span class="token comment"># 存放微应用 angular-hash 的文件夹</span>
    ├── angular-history/      <span class="token comment"># 存放微应用 angular-history 的文件夹</span>
    ├── index.html            <span class="token comment"># 主应用的index.html</span>
    ├── css/                  <span class="token comment"># 主应用的css文件夹</span>
    ├── js/                   <span class="token comment"># 主应用的js文件夹</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基本操作和上面是一样的，只要<strong>保证路径匹配规则和微应用的存放路径名不一样</strong>即可。</p><h2 id="主微应用在不同服务器" tabindex="-1"><a class="header-anchor" href="#主微应用在不同服务器" aria-hidden="true">#</a> 主微应用在不同服务器</h2><p>一般这么做是因为不允许主应用跨域访问微应用，做法就是将主应用服务器上一个特殊路径的请求全部转发到微应用的服务器上，即通过代理实现“微应用部署在主应用服务器上”的效果。</p><p>例如，主应用在 A 服务器，微应用在 B 服务器，使用路径 /app1 来区分微应用，即 A 服务器上所有 /app1 开头的请求都转发到 B 服务器上</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>/app1/ {
  proxy_pass http://www.b.com/app1/;
  proxy_set_header Host $host:$server_port;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主应用注册微应用时，entry 可以为相对路径，路径匹配规则不可以和 entry 一样（否则主应用页面刷新就变成微应用）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">registerMicroApps</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;app1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;/app1/&#39;</span><span class="token punctuation">,</span> <span class="token comment">// http://localhost:8080/app1/</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;#container&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">activeRule</span><span class="token operator">:</span> <span class="token string">&#39;/child-app1&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意微应用打包的 publicPath 还是要带上，否则无法正常独立访问</p>`,26);function u(v,m){const t=o("ExternalLinkIcon");return n(),l("div",null,[d,a("p",null,[s("参考链接："),a("a",p,[s("https://qiankun.umijs.org/zh/cookbook"),i(t)])]),h])}const g=e(c,[["render",u],["__file","6-build.html.vue"]]);export{g as default};
