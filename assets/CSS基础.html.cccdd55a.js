import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as d,a as e,b as t,e as i}from"./app.0f9e6d1d.js";const s={},n=e(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>主要使用场景：美化网页，布局页面。</p><h3 id="html-的局限性" tabindex="-1"><a class="header-anchor" href="#html-的局限性" aria-hidden="true">#</a> HTML 的局限性</h3><p>HTML 只关注内容的语义。</p><h3 id="css-网页的美容师" tabindex="-1"><a class="header-anchor" href="#css-网页的美容师" aria-hidden="true">#</a> CSS-网页的美容师</h3><p>CSS 也是一种标记语言。</p><p>主要作用：设置 HTML 页面中的文本内容（字体大小对齐方式）、图片的外形（宽高、边框样式、边距）以及版面的布局和外观显示样式。</p><p><strong>总结</strong>：HTML 做结构，显示元素内容。CSS 美化 HTML，布局网页。</p><p><strong>CSS 最大价值</strong>：由 HTML 专注去做结构呈现，样式交给 CSS，即结构与样式分离。</p><p><strong>CSS 特点</strong>：会自动更新。</p><p><strong>CSS 规则</strong>：1.类 2.标签 3. ID 4.复合内容</p><h3 id="css-语法规范" tabindex="-1"><a class="header-anchor" href="#css-语法规范" aria-hidden="true">#</a> CSS 语法规范</h3><p>规则组成：选择器以及一条或多条声明。</p><p>选择器是用于指定 CSS 样式的 HTML 标签，花括号内是对该对象设置的具体样式</p><p>属性和属性值以“键值对”的形式出现</p><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等</p><p>属性和属性值之间用英文分号 ; 分开</p><h2 id="书写样式" tabindex="-1"><a class="header-anchor" href="#书写样式" aria-hidden="true">#</a> 书写样式</h2><h3 id="建议展开格式" tabindex="-1"><a class="header-anchor" href="#建议展开格式" aria-hidden="true">#</a> 建议展开格式</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h3</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="样式大小写" tabindex="-1"><a class="header-anchor" href="#样式大小写" aria-hidden="true">#</a> 样式大小写</h3><p>强烈推荐样式选择器，属性名，属性值关键字全部使用小写字母，特殊情况除外。</p><h3 id="空格规范" tabindex="-1"><a class="header-anchor" href="#空格规范" aria-hidden="true">#</a> 空格规范</h3><ul><li>属性值前面，冒号后面，保留一个空格。</li><li>选择器（标签）和大括号中间保留空格。</li></ul><h2 id="基础选择器" tabindex="-1"><a class="header-anchor" href="#基础选择器" aria-hidden="true">#</a> 基础选择器</h2><p>基础选择器由单个选择器组成。</p><p>基础选择器包括：标签选择器、类选择器、id 选择器和通配符选择器。</p><h3 id="标签选择器" tabindex="-1"><a class="header-anchor" href="#标签选择器" aria-hidden="true">#</a> 标签选择器</h3><p>是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p>优点：能快速为页面中同类型的标签统一设置样式。</p><p>缺点：不能设计差异化样式，只能选择全部的当前标签。</p><h3 id="类选择器" tabindex="-1"><a class="header-anchor" href="#类选择器" aria-hidden="true">#</a> 类选择器</h3><p>差异化不同标签，单独一个或几个标签设置。</p><p>语法: { 属性 1: 属性值 1; 属性 2: 属性值 2; …… }</p><p>结构需要用 class 属性来调用 class 类。</p><p><strong>注意</strong></p><ul><li><p>类选择器使用”.”进行标识，后面紧跟类名（自定义，自命名）。</p></li><li><p>可以理解为给这个标签起了一个名字来表示。</p></li><li><p>长名称或词组可以使用中横线来为选择器命名。</p></li><li><p>不要使用纯数字、中文等命名，尽量使用英文字母来表示。</p></li><li><p>命名规范：见附件（Web 前端开发规范手册.docx）</p></li></ul><p>多类名：在标签<strong>class</strong>属性中写多个类名，多个类名中间必须用空格分开。</p><br><p><strong>多类名使用场景（面向对象思维）</strong></p><ul><li><p>把标签元素相同的样式（共同的部分）放到一个类里面。</p></li><li><p>这些标签都可以调用这个公共的类，然后再调用自己独有的类。</p></li><li><p>节省 CSS 代码，修改方便。</p></li></ul><h3 id="id-选择器" tabindex="-1"><a class="header-anchor" href="#id-选择器" aria-hidden="true">#</a> id 选择器</h3><p>为标有特定 id 的 HTML 元素指定特定的样式。</p><p>HTML 元素以 id 属性来设置 id 选择器</p><p><strong>语法</strong>：CSS 中 id 选择器以&quot; # &quot;来定义。</p><p><strong>注意</strong>：id 属性只能在每个 HTML 文档中出现一次。</p><p><strong>口诀</strong>：样式#定义，结构 id 调用，只能调用一次，别人切勿使用。</p><p>id 选择器和类选择器区别</p><ol><li><p>类选择器 class 好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。</p></li><li><p>id 选择器好比人的身份证号码，全中国唯一，不得重复。</p></li><li><p>id 选择器和类选择器最大的不同在于使用次数上。</p></li><li><p>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 Javascript 搭配使用。</p></li></ol><h3 id="通配符选择器" tabindex="-1"><a class="header-anchor" href="#通配符选择器" aria-hidden="true">#</a> 通配符选择器</h3><p>使用 * 定义，表示选区页面中所有元素（标签）。</p><br><p><strong>最终总结</strong></p><table><thead><tr><th style="text-align:left;">基础选择器</th><th style="text-align:left;">作用</th><th style="text-align:left;">特点</th><th style="text-align:left;">使用情况</th><th style="text-align:left;">用法</th></tr></thead><tbody><tr><td style="text-align:left;">标签选择器</td><td style="text-align:left;">可以选出所有相同<br>的标签，比如 p</td><td style="text-align:left;">不能差异化选择</td><td style="text-align:left;">较多</td><td style="text-align:left;"><code>p { color: red; }</code></td></tr><tr><td style="text-align:left;">类选择器</td><td style="text-align:left;">可以选出 1 个或多个标签</td><td style="text-align:left;">可以根据需求选择</td><td style="text-align:left;">非常多</td><td style="text-align:left;"><code>.nav { color: red; }</code></td></tr><tr><td style="text-align:left;">id 选择器</td><td style="text-align:left;">一次只能选择 1 个标签</td><td style="text-align:left;">可以根据需求选择</td><td style="text-align:left;">非常多</td><td style="text-align:left;"><code>.nav { color: red; }</code></td></tr><tr><td style="text-align:left;">通配符选择器</td><td style="text-align:left;">选择所有的标签</td><td style="text-align:left;">选择的太多，<br>有部分不需要</td><td style="text-align:left;">特殊情况使用</td><td style="text-align:left;"><code>* { color: red; }</code></td></tr></tbody></table><h2 id="css-的引入方式" tabindex="-1"><a class="header-anchor" href="#css-的引入方式" aria-hidden="true">#</a> CSS 的引入方式</h2><p>按照 CSS 书写位置（引入方式），CSS 样式表可以分为三大类：</p><p>1、行内样式表（行内式）</p><p>2、内部样式表（嵌入式）</p><p>3、外部样式表（链接式）</p><h3 id="内部样式表" tabindex="-1"><a class="header-anchor" href="#内部样式表" aria-hidden="true">#</a> 内部样式表</h3><p>写到 html 页面内部，将所有 CSS 代码抽取出来单独放到<code>&lt;style&gt;</code>标签里。</p><p><code>&lt;style&gt;</code>标签理论上可以放在 HTML 文档任何地方，默认放到<code>&lt;head&gt;</code>标签中。通过此种方式，可以方便控制整个页面中的元素样式设置。</p><p>缺点：没有实现结构与样式完全分离。</p><h3 id="行内样式表" tabindex="-1"><a class="header-anchor" href="#行内样式表" aria-hidden="true">#</a> 行内样式表</h3><p>元素标签内部的 style 属性中设定 CSS 样式，适合修改简单样式。</p><p>例：<code>&lt;div style=&quot;color: red; font-size: 20px;&quot;&gt;Hello World!&lt;/div&gt;</code></p><p>style 称为标签的属性。</p><p>双引号中间，写法要符合 CSS 规范。当前标签设置样式可控。</p><p>书写繁琐，没有体现结构与样式分离思想，不推荐使用。只有对当前元素添加简单样式的时候考虑使用。</p><p>使用行内样式表设定 CSS，通称行内式引入。</p><h3 id="外部样式表" tabindex="-1"><a class="header-anchor" href="#外部样式表" aria-hidden="true">#</a> 外部样式表</h3><p>实际开发都是外部样式表。适合于样式比较多的情况。核心：样式单独写到 CSS 文件中，把 CSS 文件引入到 HTML 页面中使用。</p><p>步骤：</p><p>1.新建一个后缀名为.css 的样式文件，把所有 CSS 代码都放入此文件中。</p><p>2.在 HTML 页面中，使用<code>&lt;link&gt;</code>标签引入这个文件。</p><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">rel</td><td style="text-align:left;">定义当前文档与被链接文档之间的关系，在这里需要指定为&quot;stylesheet&quot;，<br>表示被链接的文档是一个样式表文件。</td></tr><tr><td style="text-align:left;">href</td><td style="text-align:left;">定义所链接外部样式表文件的 URL，可以是相对路径，也可以是绝对路径。</td></tr></tbody></table><br><p><strong>CSS 引入方式总结</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">作用</th><th style="text-align:left;">作用</th><th style="text-align:left;">作用</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">行内样式表</td><td style="text-align:left;">书写方便，权重高</td><td style="text-align:left;">结构样式混写</td><td style="text-align:left;">较少</td><td style="text-align:left;">控制一个标签</td></tr><tr><td style="text-align:left;">内部样式表</td><td style="text-align:left;">部分结构和样式相分离</td><td style="text-align:left;">没有彻底分离</td><td style="text-align:left;">较多</td><td style="text-align:left;">控制一个页面</td></tr><tr><td style="text-align:left;">外部样式表</td><td style="text-align:left;">完全实现结构和样式相分离</td><td style="text-align:left;">需要引入</td><td style="text-align:left;">最多，吐血推荐</td><td style="text-align:left;">控制多个页面</td></tr></tbody></table><h2 id="复合选择器" tabindex="-1"><a class="header-anchor" href="#复合选择器" aria-hidden="true">#</a> 复合选择器</h2><p>复合选择器可以更准确、更高效地选择目标元素（标签）。</p><p>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的。</p><p>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等。</p><h3 id="后代选择器-重要" tabindex="-1"><a class="header-anchor" href="#后代选择器-重要" aria-hidden="true">#</a> 后代选择器（重要）</h3><p>后代选择器又称为包含选择器，可以选择父元素里面的子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p>`,86),r=t("p",{样式声明:""},"语法：元素 1 元素 2",-1),p=t("ul",null,[t("li",null,[t("p",null,"选择元素 1 里面的所有元素 2.")]),t("li",null,[t("p",null,"1 和 2 可以是任意基础选择器。")])],-1),h=t("h3",{id:"子选择器-重要",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#子选择器-重要","aria-hidden":"true"},"#"),i(" 子选择器（重要）")],-1),o=t("p",null,"子元素选择器（子选择器）只能选择作为某元素的最近一级子元素。",-1),c=t("p",{样式声明:""},"语法：元素 1 > 元素 2",-1),g=e('<ul><li><p>元素 1 和 2 中间用大于号隔开。</p></li><li><p>1 是父级，2 是子级，最终选择元素 2。</p></li><li><p>元素 2 必须是亲儿子。</p></li></ul><h3 id="并集选择器" tabindex="-1"><a class="header-anchor" href="#并集选择器" aria-hidden="true">#</a> 并集选择器</h3><p>并集选择器可以选择多组标签，同时为他们定义相同的样式。通常用于集体声明。</p><p>各选择器通过 , 连接，<strong>任何形式的选择器</strong>都可以作为并集选择的一部分</p>',4),f=t("p",{样式声明:""},"语法：元素 1,元素 2",-1),x=e('<ul><li><p>元素 1 和元素 2 中间用逗号隔开。</p></li><li><p>逗号可以理解为 和、&amp;。</p></li><li><p>约定的语法规范，并集选择器喜欢竖着写。</p></li></ul><h3 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h3><p>向某些选择器添加特殊的效果。书写特点冒号显示 :</p><p>常用有链接伪类、结构伪类。先了解常用的链接伪类选择器。</p><p>a:link 选择所有未被访问的链接</p><p>a:visited 选择所有已被访问的链接</p><p>a:hover 选择鼠标指针位于其上的链接</p><p>a:active 选择活动链接（鼠标按下未弹起的链接）</p><p>a:focus 选择光标焦点位于其上的链接</p><p>链接伪类选择器注意事项：</p><p>1.为了确保生效，请按照 LVHA 循顺序声明：link visited hover active.</p><p>2.因为 a 链接在浏览器中具有默认样式，实际工作中都需要给链接单独指定样式。常用写法： a {} + a:hover {} :focus 伪类选择器用于选取获得焦点（光标）的表单元素。</p><p>3.注意顺序不能颠倒，先写 link 后写 visited。</p><p>一般情况<code>&lt;input&gt;</code>才能获取，主要针对表单元素使用。</p><br><p><strong>复合选择器总结</strong></p><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">作用</th><th style="text-align:left;">特征</th><th style="text-align:left;">使用情况</th><th style="text-align:left;">隔开符号及用法</th></tr></thead><tbody><tr><td style="text-align:left;">后代选择器</td><td style="text-align:left;">用来选择后代元素</td><td style="text-align:left;">可以是子孙后代</td><td style="text-align:left;">较多</td><td style="text-align:left;">符号是空格 .nav a</td></tr><tr><td style="text-align:left;">子代选择器</td><td style="text-align:left;">选择最近一级元素</td><td style="text-align:left;">只选亲儿子</td><td style="text-align:left;">较少</td><td style="text-align:left;">符号是大于 .nav&gt;a</td></tr><tr><td style="text-align:left;">并集选择器</td><td style="text-align:left;">选择某些相同样式的元素</td><td style="text-align:left;">可以用于集体声明</td><td style="text-align:left;">较多</td><td style="text-align:left;">符号是逗号 .nav,.header</td></tr><tr><td style="text-align:left;">链接伪类选择器</td><td style="text-align:left;">选择不同状态的链接</td><td style="text-align:left;">大多跟链接相关</td><td style="text-align:left;">较多</td><td style="text-align:left;">重点记住 a{} 和 a:hover <br>实际开发的写法</td></tr><tr><td style="text-align:left;">:focus 选择器</td><td style="text-align:left;">选择获得光标的表单</td><td style="text-align:left;">跟表单相关</td><td style="text-align:left;">较少</td><td style="text-align:left;">input:focus<br>记住这个写法</td></tr></tbody></table>',17),y=[n,r,p,h,o,c,g,f,x];function u(b,S){return a(),d("div",null,y)}const C=l(s,[["render",u],["__file","CSS基础.html.vue"]]);export{C as default};
