import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,b as n,e as s,d as o,a as r,r as l}from"./app.162dcd44.js";const i={},c=n("p",null,"脚手架以vue-cli为例进行记录，实际开发更推荐使用vite。",-1),u=n("h2",{id:"初始化脚手架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#初始化脚手架","aria-hidden":"true"},"#"),s(" 初始化脚手架")],-1),d=n("li",null,[n("p",null,"Vue 脚手架是 Vue 官方提供的标准化开发工具（开发平台）。")],-1),v=n("li",null,[n("p",null,"最新的版本是 5.x。")],-1),k={href:"https://cli.vuejs.org/zh/%E3%80%82",target:"_blank",rel:"noopener noreferrer"},m=r(`<h3 id="初始化步骤" tabindex="-1"><a class="header-anchor" href="#初始化步骤" aria-hidden="true">#</a> 初始化步骤</h3><p>第一步（仅第一次执行）：全局安装@vue/cli。</p><p>npm install -g @vue/cli</p><p>第二步：切换到你要创建项目的目录，然后使用命令创建项目</p><p>vue create xxxx</p><p>第三步：启动项目</p><p>npm run serve</p><p>Vue 脚手架隐藏了所有 webpack 相关的配置，若想查看具体的 webpack 配置，请执行：vue inspect &gt; output.js</p><h3 id="模板项目结构" tabindex="-1"><a class="header-anchor" href="#模板项目结构" aria-hidden="true">#</a> 模板项目结构</h3><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/Vue/image-20211020165600263.png" alt="脚手架模板项目结构" loading="lazy"></p><h2 id="请求代理" tabindex="-1"><a class="header-anchor" href="#请求代理" aria-hidden="true">#</a> 请求代理</h2><p>第一种方式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:4000&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仅限一个服务器端口有效。</p><p>工作方式：请求了前端不存在的资源时，那么请求会转发给该服务器（优先匹配前端资源）</p><p>第二种方式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;&lt;url&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;^/api&#39;</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ws</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>	<span class="token comment">//用于支持websocket</span>
        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span>	<span class="token comment">//用于控制请求头中的host值</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;/foo&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;&lt;other_url&gt;&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以配置多个代理，且可以灵活控制请求是否走代理。</p><p>配置略微繁琐，请求资源时必须加前缀。</p>`,19);function h(b,_){const a=l("ExternalLinkIcon");return p(),t("div",null,[c,u,n("ol",null,[d,v,n("li",null,[n("p",null,[s("文档: "),n("a",k,[s("https://cli.vuejs.org/zh/。"),o(a)])])])]),m])}const x=e(i,[["render",h],["__file","7-脚手架.html.vue"]]);export{x as default};
