import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as i,d as s}from"./app.e3b96c4f.js";const e={},t=s(`<h2 id="版本控制" tabindex="-1"><a class="header-anchor" href="#版本控制" aria-hidden="true">#</a> 版本控制</h2><p>版本控制是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简而言之就是用于管理多人协同开发项目的技术。</p><p><strong>版本控制分类</strong></p><p>1.本地版本控制</p><p>2.集中版本控制</p><p>3.分布式版本控制</p><p>Git是目前世界上最先进的分布式版本控制系统</p><h2 id="git配置" tabindex="-1"><a class="header-anchor" href="#git配置" aria-hidden="true">#</a> git配置</h2><p>Git Bash：Unix与Linux风格的命令行，使用最多，推荐最多。</p><p>Git CMD：Windows风格的命令行。</p><p>Git GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令。</p><h3 id="常用linux命令" tabindex="-1"><a class="header-anchor" href="#常用linux命令" aria-hidden="true">#</a> 常用Linux命令</h3><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/linux命令" alt="linux命令" loading="lazy"></p><h3 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置" aria-hidden="true">#</a> 环境配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">-l</span>	<span class="token comment">#查看配置</span>

<span class="token function">git</span> config <span class="token parameter variable">--global</span> username <span class="token string">&quot;***&quot;</span>	<span class="token comment">#设置用户名</span>

<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email *** @ ***.com	<span class="token comment">#设置密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>git相关配置文件：</p><p>1）Git\\mingw64\\etc\\gitconfig：git安装目录下的gitconfig --system 系统级</p><p>2）C:\\Users\\Administrator.gitconfig：只适用于当前登录用户的配置 --global 全局</p><p>这里可以直接编辑配置文件，通过命令设置后会响应到这里。</p><h2 id="基本理论-core" tabindex="-1"><a class="header-anchor" href="#基本理论-core" aria-hidden="true">#</a> 基本理论（Core）</h2><p>Git本地三个工作区域 工作目录 Working Directory、暂存区 Stage/Index 资源库 Repository/Git Directory。加上远程的git仓库 Remote Directory就分为四个工作区域。</p><p>转换关系：</p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719223552477.png" alt="first" loading="lazy"></p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719223709278.png" alt="second" loading="lazy"></p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719223902246.png" alt="third" loading="lazy"></p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719224001714.png" alt="fourth" loading="lazy"></p><h3 id="项目搭建" tabindex="-1"><a class="header-anchor" href="#项目搭建" aria-hidden="true">#</a> 项目搭建</h3><h4 id="创建工作目录与常用指令" tabindex="-1"><a class="header-anchor" href="#创建工作目录与常用指令" aria-hidden="true">#</a> 创建工作目录与常用指令</h4><p><strong>工作目录不要有中文</strong></p><h4 id="本地仓库搭建" tabindex="-1"><a class="header-anchor" href="#本地仓库搭建" aria-hidden="true">#</a> 本地仓库搭建</h4><p>1.创建全新仓库。2.克隆远程仓库。</p><p>1.创建全新仓库，需要用GIT管理的项目根目录执行。</p><p><code>$ git init</code></p><h4 id="克隆远程仓库" tabindex="-1"><a class="header-anchor" href="#克隆远程仓库" aria-hidden="true">#</a> 克隆远程仓库</h4><p>将远程服务器上的仓库完全镜像一份至本地。</p><p><code>$ git clone [url]</code></p><h3 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作" aria-hidden="true">#</a> 文件操作</h3><h4 id="_4种状态" tabindex="-1"><a class="header-anchor" href="#_4种状态" aria-hidden="true">#</a> 4种状态</h4><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719224448211.png" alt="four status pic" loading="lazy"></p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210719230733524.png" alt="four status text" loading="lazy"></p><h4 id="指令" tabindex="-1"><a class="header-anchor" href="#指令" aria-hidden="true">#</a> 指令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> status <span class="token punctuation">[</span>filename<span class="token punctuation">]</span>	<span class="token comment">#查看指定文件状态</span>

<span class="token function">git</span> status	<span class="token comment">#查看所有文件状态</span>

<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>	<span class="token comment">#添加所有文件到暂存区</span>

<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;消息内容&quot;</span>	<span class="token comment">#提交暂存区中的内容到本地仓库	-m	提交信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="忽略文件" tabindex="-1"><a class="header-anchor" href="#忽略文件" aria-hidden="true">#</a> 忽略文件</h3><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210720083357492.png" alt="gitignore1" loading="lazy"></p><p><img src="https://misaka10032.oss-cn-chengdu.aliyuncs.com/git/image-20210720083442204.png" alt="gitignore-demo" loading="lazy"></p><p>工程化项目中常用的.gitignore文件内容（npm/yarn/pnpm）：</p><div class="language-.gitignore line-numbers-mode" data-ext=".gitignore"><pre class="language-.gitignore"><code>.DS_Store
node_modules/
dist/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
pnpm-lock.yaml
tests/**/coverage/

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),c=[t];function d(r,l){return n(),i("div",null,c)}const g=a(e,[["render",d],["__file","git.html.vue"]]);export{g as default};
