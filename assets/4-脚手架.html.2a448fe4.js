import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as n,a as e}from"./app.fbe40cce.js";const p={},t=e(`<h2 id="react-脚手架" tabindex="-1"><a class="header-anchor" href="#react-脚手架" aria-hidden="true">#</a> react 脚手架</h2><p><code>create-react-app</code>：用来帮助程序员快速创建一个 React 模板项目的 npm 包</p><ol><li>包含了所有需要的配置（语法检查、JSX 编译、devServer）</li><li>下载好了所有相关依赖</li><li>可以直接运行一个简单效果</li></ol><p>整体技术架构为：react + webpack + es6 + eslint</p><p>使用脚手架开发项目的特点：模块化、组件化、工程化</p><h2 id="创建项目并启动" tabindex="-1"><a class="header-anchor" href="#创建项目并启动" aria-hidden="true">#</a> 创建项目并启动</h2><ol><li>全局安装 cmd 指令：<code>npm i -g create-react-app</code></li><li>切换到创建项目的目录，使用 cmd 指令：<code>create-react-app hello-react</code></li><li>等待项目创建好之后进入项目文件夹：<code>cd hello-react</code></li><li>启动项目：npm start</li></ol><h2 id="脚手架项目结构" tabindex="-1"><a class="header-anchor" href="#脚手架项目结构" aria-hidden="true">#</a> 脚手架项目结构</h2><p>public ---- 静态资源文件夹</p><p>favicon.icon ------ 网站页签图标</p><p>index.html -------- 主页面</p><p>logo192.png ------- logo 图</p><p>logo512.png ------- logo 图</p><p>manifest.json ----- 应用加壳的配置文件</p><p>robots.txt -------- 爬虫协议文件</p><p>src ---- 源码文件夹</p><p>App.css -------- App 组件的样式</p><p>App.js --------- App 组件</p><p>App.test.js ---- 用于给 App 做测试</p><p>index.css ------ 入口文件样式</p><p>index.js ------- 入口文件</p><p>logo.svg ------- logo 图</p><p>reportWebVitals.js --- 页面性能分析文件(需要 web-vitals 库的支持)</p><p>setupTests.js ---- 组件单元测试的文件(需要 jest-dom 库的支持)</p><h2 id="cssmodule" tabindex="-1"><a class="header-anchor" href="#cssmodule" aria-hidden="true">#</a> CSSModule</h2><p>为了避免 CSS 全局污染，在 jsx 文件中引入<code>xxx.module.css</code>形成样式隔离</p><p>引入到 jsx 文件中的<code>module.css</code>文件默认生成一张映射表，css 中真正书写的样式名为 key，注入到页面中被隔离的样式名(key+hash)为 value</p><p>可以通过这种方法获取 CSS 样式名</p><p>**注意：**标签选择器不能被 module 隔离，最外部类名需使用类选择器 orID 选择器包裹</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.active</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// style: { active: &#39;active+随机hash生成的样式名&#39; }</span>
<span class="token keyword">import</span> style <span class="token keyword">from</span> <span class="token string">&quot;./demo.module.css&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">.</span>active<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结：</p><ul><li>尽量使用 class 来定义样式</li><li>CSSModule 最大特色是作用于本地，只用单个类来定义样式最佳</li><li>尽量避免组合选择器的运用，有利于提高选择器性能</li><li>可以借助<code>:global</code>和标签选择器来声明全局样式，这两种写法隔离都会失效</li><li>使用 class 命名时，尽量避免折中或<code>-</code>，尽量选择<code>_</code>或<code>__</code>连接</li><li>尽量借助 CSS 的自定义属性来代替 CSS 处理器的变量</li></ul>`,33),c=[t];function o(l,i){return a(),n("div",null,c)}const u=s(p,[["render",o],["__file","4-脚手架.html.vue"]]);export{u as default};
