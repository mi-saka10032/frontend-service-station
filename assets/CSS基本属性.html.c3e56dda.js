import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as a,f as l}from"./app.bae18d7b.js";const d={},n=l('<h2 id="_1-字体属性" tabindex="-1"><a class="header-anchor" href="#_1-字体属性" aria-hidden="true">#</a> 1.字体属性</h2><p>字体属性定义 字体系列、大小、粗细和文字样式。</p><h3 id="字体系列-font-family" tabindex="-1"><a class="header-anchor" href="#字体系列-font-family" aria-hidden="true">#</a> 字体系列 font-family</h3><p>CSS 使用 font-family 属性定义文本的字体系列。</p><p>各字体之间必须使用英文逗号隔开。</p><p>一般情况下，如果有空格隔开的多个单词组成的字体，加引号。</p><p>尽量使用系统默认自带字体，保证任何用户浏览器都能正确显示。</p><p>最常见的字体：</p><p><code>body{font-family:’Microsoft YaHei’,tahoma,arial,’Hiragino Sans GB’;}</code></p><h3 id="字体大小-font-size" tabindex="-1"><a class="header-anchor" href="#字体大小-font-size" aria-hidden="true">#</a> 字体大小 font-size</h3><p>CSS 使用 font-size 属性定义字体大小。</p><p>px（像素）大小是我们网页的最常用的单位。谷歌浏览器默认 16px。</p><p>不同浏览器可能默认显示的字号大小不一致，尽量给一个明确值大小，不要默认太小。</p><p>可以给 body 指定整个页面文字的大小。</p><h3 id="字体粗细-font-weight" tabindex="-1"><a class="header-anchor" href="#字体粗细-font-weight" aria-hidden="true">#</a> 字体粗细 font-weight</h3><p>CSS 使用 font-weight 属性设置文本字体的粗细。</p><p>参数：</p><p>normal number400</p><p>bold number700</p><p>bolder IE5 + 特粗体</p><p>lighter IE5 + 细体</p><p>number IE5 + 100 200 300 ……</p><p>实际开发中，提倡使用数字表示加粗或者变细。</p><h3 id="文本风格-font-style" tabindex="-1"><a class="header-anchor" href="#文本风格-font-style" aria-hidden="true">#</a> 文本风格 font-style</h3><p>CSS 使用 font-style 属性设置文本的风格。</p><p>属性值：</p><p>normal 默认值，浏览器显示标准样式 font-style: normal;</p><p>italic 浏览器会显示斜体的字体样式。</p><p><strong>注意</strong>：平时很少给文字加斜体，反而要给斜体标签改不倾斜字体</p><h3 id="font-属性复合使用" tabindex="-1"><a class="header-anchor" href="#font-属性复合使用" aria-hidden="true">#</a> font 属性复合使用</h3><p>font:font-sytle font-variant font-weight font-size/line-height font-family;</p><p>顺序依次为 风格 粗细 大小 样式。不能颠倒顺序，属性间以空格隔开。必须至少保留 font-size 和 font-family 属性。</p><h3 id="新增-variant-属性" tabindex="-1"><a class="header-anchor" href="#新增-variant-属性" aria-hidden="true">#</a> 新增 variant 属性</h3><p>用于设置小型大写字母的字体显示文本。</p><p>属性值：normal 默认；small-caps 浏览器显示小型大写字母的字体。</p><br><p><strong>字体属性总结</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">表示</th><th style="text-align:left;">注意点</th></tr></thead><tbody><tr><td style="text-align:left;">font-size</td><td style="text-align:left;">字号</td><td style="text-align:left;">我们通常用的单位是 px 像素，一定要跟上单位</td></tr><tr><td style="text-align:left;">font-family</td><td style="text-align:left;">字体</td><td style="text-align:left;">实际工作中按照团队约定来写字体</td></tr><tr><td style="text-align:left;">font-weight</td><td style="text-align:left;">字体粗细</td><td style="text-align:left;">记住加粗是 700 或者 bold，不加粗是 normal 或者 400，记住数字不要跟单位</td></tr><tr><td style="text-align:left;">font-style</td><td style="text-align:left;">字体样式</td><td style="text-align:left;">记住倾斜是 italic，不倾斜是 normal，工作中我们最常用 normal</td></tr><tr><td style="text-align:left;">font</td><td style="text-align:left;">字体连写</td><td style="text-align:left;">1.字体连写是有顺序的，不能随意换位置 2.其中字号和字体必须同时出现</td></tr></tbody></table><h2 id="_2-文本属性" tabindex="-1"><a class="header-anchor" href="#_2-文本属性" aria-hidden="true">#</a> 2.文本属性</h2><p>CSStext 文本属性可定义文本外观（颜色、对齐文本、装饰文本、文本缩进、行间距等）。</p><h3 id="文本颜色-color" tabindex="-1"><a class="header-anchor" href="#文本颜色-color" aria-hidden="true">#</a> 文本颜色 color</h3><p>表示：预定义颜色、<strong>十六进制（<code>#FF0000</code>）</strong>（最常用）、RGB 代码(rgb(255,0,0)或者 rgb(100%,0%,0%))。</p><h3 id="对齐文本-text-align" tabindex="-1"><a class="header-anchor" href="#对齐文本-text-align" aria-hidden="true">#</a> 对齐文本 text-align</h3><p>用于设置元素内文本内容的水平对齐方式。</p><p>left 左对齐（默认） right 右对齐 center 居中对齐</p><h3 id="装饰文本-text-decoration" tabindex="-1"><a class="header-anchor" href="#装饰文本-text-decoration" aria-hidden="true">#</a> 装饰文本 text-decoration</h3><p>规定添加到文本的修饰。可添加下划线、删除线、上划线等。</p><p>none 默认无装饰线 underline 下划线，链接 a 自带下划线</p><p>overline 上划线（几乎不用） line-through 删除线（不常用）</p><h3 id="文本缩进-text-indent" tabindex="-1"><a class="header-anchor" href="#文本缩进-text-indent" aria-hidden="true">#</a> 文本缩进 text-indent</h3><p>指定文本的第一行缩进，通常是将段落的首行缩进。</p><p>px:像素单位 em:相对单位，相对当前元素的倍数。</p><h3 id="行间距-line-height" tabindex="-1"><a class="header-anchor" href="#行间距-line-height" aria-hidden="true">#</a> 行间距 line-height</h3><p>设置行间距离（行高）。控制文字行与行之间的距离。</p><p>行间距=上间距+文本高度+下间距。</p><br><p><strong>文本属性总结</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">表示</th><th style="text-align:left;">注意点</th></tr></thead><tbody><tr><td style="text-align:left;">color</td><td style="text-align:left;">文本颜色</td><td style="text-align:left;">我们通常用 十六进制 比如 而且是简写形式 <code>#fff</code></td></tr><tr><td style="text-align:left;">text-align</td><td style="text-align:left;">文本对齐</td><td style="text-align:left;">可以设定文字水平的对齐方式</td></tr><tr><td style="text-align:left;">text-indent</td><td style="text-align:left;">文本缩进</td><td style="text-align:left;">通常我们用于段落首行缩进 2 个字的距离 text-indent: 2em;</td></tr><tr><td style="text-align:left;">text-decoration</td><td style="text-align:left;">文本修饰</td><td style="text-align:left;">记住 添加下划线 underline 取消下划线 none</td></tr><tr><td style="text-align:left;">line-height</td><td style="text-align:left;">行高</td><td style="text-align:left;">控制行与行之间的距离</td></tr></tbody></table><h2 id="_3-css-的背景" tabindex="-1"><a class="header-anchor" href="#_3-css-的背景" aria-hidden="true">#</a> 3.CSS 的背景</h2><p>通过背景属性，可以给页面元素添加背景样式。</p><p>背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。</p><h3 id="背景颜色-background-color" tabindex="-1"><a class="header-anchor" href="#背景颜色-background-color" aria-hidden="true">#</a> 背景颜色 background-color</h3><p>背景颜色为红色：<code>{ background-color: red }</code></p><p>一般情况下背景颜色默认值 transparent（透明）。</p><h3 id="背景图片-background-image" tabindex="-1"><a class="header-anchor" href="#背景图片-background-image" aria-hidden="true">#</a> 背景图片 background-image</h3><p>实际开发常见于 logo 或者一些装饰性的小图片或者超大背景图，优点是非常便于控制位置（精灵图也是一种运用场景）。</p><p><code>{ background-image: none | url (url) }</code> （默认平铺）</p><h3 id="背景平铺-background-repeat" tabindex="-1"><a class="header-anchor" href="#背景平铺-background-repeat" aria-hidden="true">#</a> 背景平铺 background-repeat</h3><p>对背景图像实现平铺。</p><p><code>{ background-repeat: repeat | no-repeat | repeat-x | repeat-y }</code></p><h3 id="背景图片位置-background-position" tabindex="-1"><a class="header-anchor" href="#背景图片位置-background-position" aria-hidden="true">#</a> 背景图片位置 background-position</h3><p>改变图片在背景中的位置。</p><p><code>{ background-position: x y; }</code></p><p>x 坐标和 y 坐标，可以使用方位名词或精确单位。</p><ol><li>参数是方位名词</li></ol><ul><li><p>前后顺序无关：left top / top left 效果一致。</p></li><li><p>只指定了一个方位名词，另一个值省略，第二个值默认居中对齐。</p></li></ul><ol start="2"><li>参数是精确单位</li></ol><ul><li><p>第一个是 x 坐标，第二个是 y 坐标。</p></li><li><p>只指定一个数值，那该数值一定是 x 坐标，y 坐标默认垂直居中。</p></li></ul><ol start="3"><li>参数是混合单位</li></ol><ul><li>方位名词和精确单位混用，第一个是 x 坐标，第二个是 y 坐标。</li></ul><h3 id="背景图像固定background-attachment" tabindex="-1"><a class="header-anchor" href="#背景图像固定background-attachment" aria-hidden="true">#</a> 背景图像固定background-attachment</h3><p>设置背景图像是否固定或者随着页面的其余部分滚动。后期可以制作视差滚动效果。</p><p><code>{ background-attachment: scroll | fixed 滚动/固定 }</code></p><h3 id="背景复合写法" tabindex="-1"><a class="header-anchor" href="#背景复合写法" aria-hidden="true">#</a> 背景复合写法</h3><p>简写属性没有特定书写顺序，一般书写规范：</p><p><strong>background:背景颜色 图片地址 背景平铺 背景图像滚动 背景图片位置</strong>。</p><h3 id="背景色半透明" tabindex="-1"><a class="header-anchor" href="#背景色半透明" aria-hidden="true">#</a> 背景色半透明</h3><p><code>{ background: rgba(0, 0, 0, 0.3); }</code>（一般习惯把 0.3 的 0 省略掉）</p><p>最后一个参数是 alpha 透明度，取值范围 0~1。</p><p><strong>背景总结</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">作用</th><th style="text-align:left;">值</th></tr></thead><tbody><tr><td style="text-align:left;">background-color</td><td style="text-align:left;">背景颜色</td><td style="text-align:left;">预定义的颜色值/十六进制/RGB(A)代码</td></tr><tr><td style="text-align:left;">background-image</td><td style="text-align:left;">背景图片</td><td style="text-align:left;">url(图片路径)</td></tr><tr><td style="text-align:left;">background-repeat</td><td style="text-align:left;">是否平铺</td><td style="text-align:left;">repeat/no-repeat/repeat-x/repeat-y</td></tr><tr><td style="text-align:left;">background-position</td><td style="text-align:left;">背景位置</td><td style="text-align:left;">length/position 分别是x和y坐标</td></tr><tr><td style="text-align:left;">background-attachment</td><td style="text-align:left;">背景附着</td><td style="text-align:left;">scroll（背景滚动）/fixed（背景固定）</td></tr><tr><td style="text-align:left;">背景简写</td><td style="text-align:left;">书写更简单</td><td style="text-align:left;">背景颜色 背景图片地址 背景平铺 背景滚动 背景位置;</td></tr><tr><td style="text-align:left;">背景色半透明</td><td style="text-align:left;">背景颜色<br>半透明</td><td style="text-align:left;">background: rgba(0,0,0,0.3); 后面必须是4个值</td></tr></tbody></table>',91),r=[n];function i(o,h){return e(),a("div",null,r)}const f=t(d,[["render",i],["__file","CSS基本属性.html.vue"]]);export{f as default};
