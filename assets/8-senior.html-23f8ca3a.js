const t=JSON.parse('{"key":"v-58817262","path":"/rust/8-senior.html","title":"Rust高阶概念","lang":"zh-CN","frontmatter":{"title":"Rust高阶概念","order":8,"tag":["泛型","trait","生命周期"],"description":"函数提取封装 Rust 函数提取的目的是为了消除重复代码，其步骤为： 1. 识别重复代码 2. 提取重复代码到函数体中，并在函数签名中指定函数的输入和返回值 3. 将重复的代码使用函数调用进行替代 ```rust fn largest(list: &[i32]) -> i32 { let mut largest = 0; // &item：将item结...","head":[["meta",{"property":"og:url","content":"http://localhost:8080/frontend-service-station/rust/8-senior.html"}],["meta",{"property":"og:site_name","content":"前端加油站"}],["meta",{"property":"og:title","content":"Rust高阶概念"}],["meta",{"property":"og:description","content":"函数提取封装 Rust 函数提取的目的是为了消除重复代码，其步骤为： 1. 识别重复代码 2. 提取重复代码到函数体中，并在函数签名中指定函数的输入和返回值 3. 将重复的代码使用函数调用进行替代 ```rust fn largest(list: &[i32]) -> i32 { let mut largest = 0; // &item：将item结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T15:05:55.000Z"}],["meta",{"property":"article:author","content":"Misaka10032"}],["meta",{"property":"article:tag","content":"泛型"}],["meta",{"property":"article:tag","content":"trait"}],["meta",{"property":"article:tag","content":"生命周期"}],["meta",{"property":"article:modified_time","content":"2024-04-09T15:05:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rust高阶概念\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-09T15:05:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Misaka10032\\",\\"url\\":\\"https://github.com/mi-saka10032?tab=repositories\\",\\"email\\":\\"misaka10032@aliyun.com\\"}]}"]]},"headers":[{"level":2,"title":"函数提取封装","slug":"函数提取封装","link":"#函数提取封装","children":[]},{"level":2,"title":"泛型","slug":"泛型","link":"#泛型","children":[{"level":3,"title":"函数泛型","slug":"函数泛型","link":"#函数泛型","children":[]},{"level":3,"title":"结构体泛型","slug":"结构体泛型","link":"#结构体泛型","children":[]},{"level":3,"title":"泛型性能","slug":"泛型性能","link":"#泛型性能","children":[]}]},{"level":2,"title":"trait","slug":"trait","link":"#trait","children":[{"level":3,"title":"定义trait","slug":"定义trait","link":"#定义trait","children":[]},{"level":3,"title":"实现trait","slug":"实现trait","link":"#实现trait","children":[]},{"level":3,"title":"约束trait","slug":"约束trait","link":"#约束trait","children":[]},{"level":3,"title":"默认实现","slug":"默认实现","link":"#默认实现","children":[]},{"level":3,"title":"trait作为参数","slug":"trait作为参数","link":"#trait作为参数","children":[]},{"level":3,"title":"trait作为返回类型","slug":"trait作为返回类型","link":"#trait作为返回类型","children":[]},{"level":3,"title":"特定trait类型","slug":"特定trait类型","link":"#特定trait类型","children":[]}]},{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[{"level":3,"title":"避免悬垂引用","slug":"避免悬垂引用","link":"#避免悬垂引用","children":[]},{"level":3,"title":"泛型生命周期","slug":"泛型生命周期","link":"#泛型生命周期","children":[]},{"level":3,"title":"深入理解生命周期","slug":"深入理解生命周期","link":"#深入理解生命周期","children":[]},{"level":3,"title":"Struct生命周期","slug":"struct生命周期","link":"#struct生命周期","children":[]},{"level":3,"title":"生命周期省略规则","slug":"生命周期省略规则","link":"#生命周期省略规则","children":[]},{"level":3,"title":"方法生命周期标注","slug":"方法生命周期标注","link":"#方法生命周期标注","children":[]},{"level":3,"title":"静态生命周期","slug":"静态生命周期","link":"#静态生命周期","children":[]}]},{"level":2,"title":"综合示例","slug":"综合示例","link":"#综合示例","children":[]}],"git":{"createdTime":1712675155000,"updatedTime":1712675155000,"contributors":[{"name":"misaka10032","email":"misaka10032@aliyun.com","commits":1}]},"readingTime":{"minutes":11.19,"words":3357},"filePathRelative":"rust/8-senior.md","localizedDate":"2024年4月9日","autoDesc":true,"excerpt":""}');export{t as data};
