import{_ as n,Y as a,Z as s,a1 as e}from"./framework-bb209140.js";const t={},p=e(`<p>以下划线(<code>_</code>)开头的标识符表示仅在库内部可见。每个 Dart 文件都是一个库。</p><h2 id="使用库" tabindex="-1"><a class="header-anchor" href="#使用库" aria-hidden="true">#</a> 使用库</h2><p>使用 import 导入 dart 其他库的命名空间</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:html&#39;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于第三方库可以使用文件系统路径或 package 方案</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:test/test.dart&#39;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="指定库前缀" tabindex="-1"><a class="header-anchor" href="#指定库前缀" aria-hidden="true">#</a> 指定库前缀</h3><p>如果导入两个具有冲突标识符的库，则可以为一个或两个库指定前缀。例如，如果 library1 和 library2 都有一个 Element 类：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:lib1/lib1.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:lib2/lib2.dart&#39;</span></span> <span class="token operator">as</span> lib2<span class="token punctuation">;</span>

<span class="token comment">// Uses Element from lib1.</span>
<span class="token class-name">Element</span> element1 <span class="token operator">=</span> <span class="token class-name">Element</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Uses Element from lib2.</span>
<span class="token class-name"><span class="token namespace">lib2<span class="token punctuation">.</span></span>Element</span> element2 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">lib2<span class="token punctuation">.</span></span>Element</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部分导入" tabindex="-1"><a class="header-anchor" href="#部分导入" aria-hidden="true">#</a> 部分导入</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// Import only foo.</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:lib1/lib1.dart&#39;</span></span> <span class="token keyword">show</span> foo<span class="token punctuation">;</span>

<span class="token comment">// Import all names EXCEPT foo.</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:lib2/lib2.dart&#39;</span></span> <span class="token keyword">hide</span> foo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="懒加载" tabindex="-1"><a class="header-anchor" href="#懒加载" aria-hidden="true">#</a> 懒加载</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:greetings/hello.dart&#39;</span></span> <span class="token keyword">deferred</span> <span class="token operator">as</span> hello<span class="token punctuation">;</span>

<span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> hello<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hello<span class="token punctuation">.</span><span class="token function">printGreeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),l=[p];function i(c,o){return a(),s("div",null,l)}const d=n(t,[["render",i],["__file","3-lib.html.vue"]]);export{d as default};
