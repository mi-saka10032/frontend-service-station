const e=JSON.parse('{"key":"v-861fcffa","path":"/vue2/12-%E8%AE%A1%E7%AE%97%E4%B8%8E%E7%9B%91%E5%90%AC%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html","title":"计算与监听源码解析","lang":"en-US","frontmatter":{"title":"计算与监听源码解析","order":12,"category":[],"tag":["响应式原理","惰性Computed","深度Watch"],"description":"在深入响应式原理 (./11-深入响应式原理.html)中，我们已经了解了 Observer、Dep、Watcher 之间的关系，最后实现了数据的响应式变化与监听回调，也就是实现了 API 中 data 的响应式数据效果，而且从 Watcher 的源码不难看出，Watcher 类的定义很接近于 API 中 watch 的效果，因此本章对 compute...","head":[["meta",{"property":"og:url","content":"http://localhost:8080/frontend-service-station/vue2/12-%E8%AE%A1%E7%AE%97%E4%B8%8E%E7%9B%91%E5%90%AC%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"前端加油站"}],["meta",{"property":"og:title","content":"计算与监听源码解析"}],["meta",{"property":"og:description","content":"在深入响应式原理 (./11-深入响应式原理.html)中，我们已经了解了 Observer、Dep、Watcher 之间的关系，最后实现了数据的响应式变化与监听回调，也就是实现了 API 中 data 的响应式数据效果，而且从 Watcher 的源码不难看出，Watcher 类的定义很接近于 API 中 watch 的效果，因此本章对 compute..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-09T08:29:19.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"响应式原理"}],["meta",{"property":"article:tag","content":"惰性Computed"}],["meta",{"property":"article:tag","content":"深度Watch"}],["meta",{"property":"article:modified_time","content":"2023-01-09T08:29:19.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"watch 原理与实现","slug":"watch-原理与实现","link":"#watch-原理与实现","children":[{"level":3,"title":"initWatch.js","slug":"initwatch-js","link":"#initwatch-js","children":[]},{"level":3,"title":"createWatcher.js","slug":"createwatcher-js","link":"#createwatcher-js","children":[]},{"level":3,"title":"watcher.js","slug":"watcher-js","link":"#watcher-js","children":[]},{"level":3,"title":"deep.js","slug":"deep-js","link":"#deep-js","children":[]}]},{"level":2,"title":"computed 原理与实现","slug":"computed-原理与实现","link":"#computed-原理与实现","children":[{"level":3,"title":"initComputed.js","slug":"initcomputed-js","link":"#initcomputed-js","children":[]},{"level":3,"title":"watcher.js","slug":"watcher-js-1","link":"#watcher-js-1","children":[]},{"level":3,"title":"defineComputed.js","slug":"definecomputed-js","link":"#definecomputed-js","children":[]},{"level":3,"title":"仍未解决的问题-多重嵌套 watcher","slug":"仍未解决的问题-多重嵌套-watcher","link":"#仍未解决的问题-多重嵌套-watcher","children":[]},{"level":3,"title":"嵌套 watcher 解决方案","slug":"嵌套-watcher-解决方案","link":"#嵌套-watcher-解决方案","children":[]}]},{"level":2,"title":"太长不看-总结","slug":"太长不看-总结","link":"#太长不看-总结","children":[{"level":3,"title":"watch","slug":"watch","link":"#watch","children":[]},{"level":3,"title":"computed","slug":"computed","link":"#computed","children":[]}]}],"git":{"createdTime":1673194149000,"updatedTime":1673252959000,"contributors":[{"name":"yuzhihang","email":"misaka10032@aliyun.com","commits":2}]},"readingTime":{"minutes":20.84,"words":6251},"autoDesc":true,"filePathRelative":"vue2/12-计算与监听源码解析.md","localizedDate":"January 8, 2023"}');export{e as data};
